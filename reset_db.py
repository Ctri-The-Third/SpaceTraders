import psycopg2
import json

confirm = input("Are you sure you want to reset the database? type 'yes' to confirm: ")
if confirm != "yes":
    exit()


user = json.load(open("user.json", "r"))
conn = psycopg2.connect(
    host=user["db_host"],
    port=user["db_port"],
    database=user["db_name"],
    user=user["db_user"],
    password=user["db_pass"],
)
conn.autocommit = True
sqls = [
    "delete from agents;",
    "delete from contract_tradegoods;",
    "delete from contracts;",
    "delete from extractions;",
    "delete from jump_gates;",
    "delete from jumpgate_connections;",
    "delete from market_tradegood;",
    "delete from market_tradegood_listings;",
    "delete from ship_behaviours;",
    "delete from ship_cooldowns;",
    "delete from ship_frame_links;",
    "delete from ship_frames;",
    "delete from ship_mounts;",
    "delete from ship_cargo;",
    "delete from ship_nav;",
    "delete from ship_tasks;",
    "delete from ships;",
    "delete from shipyard_types;",
    "delete from survey_deposits;",
    "delete from surveys;",
    "delete from systems;",
    "delete from transactions;",
    "delete from waypoint_Charts;",
    "delete from waypoint_Traits;",
    "delete from waypoints;",
    "delete from logging;",
]

for sql in sqls:
    with conn.cursor() as cur:
        result = cur.execute(sql)
        result = 0
        print(f"{sql} - {cur.statusmessage}")

rows = [
    [
        "MOUNT_GAS_SIPHON_I",
        "Gas Siphon I",
        "A basic gas siphon that can extract gas from gas giants and other gas-rich bodies.",
        -1,
        -1,
        -1,
    ],
    [
        "MOUNT_GAS_SIPHON_II",
        "Gas Siphon II",
        "An advanced gas siphon that can extract gas from gas giants and other gas-rich bodies more efficiently and at a higher rate.",
        -1,
        -1,
        -1,
    ],
    [
        "MOUNT_GAS_SIPHON_III",
        "Gas Siphon III",
        "An advanced gas siphon that can extract gas from gas giants and other gas-rich bodies with even greater efficiency and at a higher rate.",
        -1,
        -1,
        -1,
    ],
    [
        "MOUNT_SURVEYOR_I",
        "Surveyor I",
        "A basic survey probe that can be used to gather information about a mineral deposit. Surveys QUARTZ_SAND, SILICON_CRYSTALS, PRECIOUS_STONES, ICE_WATER, AMMONIA_ICE, IRON_ORE, COPPER_ORE, SILVER_ORE, ALUMINUM_ORE, GOLD_ORE, PLATINUM_ORE",
        1,
        2,
        1,
    ],
    [
        "MOUNT_SURVEYOR_II",
        "Surveyor II",
        "An advanced survey probe that can be used to gather information about a mineral deposit with greater accuracy.",
        2,
        -1,
        -1,
    ],
    [
        "MOUNT_SURVEYOR_III",
        "Surveyor III",
        "An advanced survey probe that can be used to gather information about a mineral deposit with even greater accuracy.",
        3,
        -1,
        -1,
    ],
    [
        "MOUNT_SENSOR_ARRAY_I",
        "Sensor Array I",
        "A basic sensor array that improves a ship's ability to detect and track other objects in space.",
        1,
        0,
        1,
    ],
    [
        "MOUNT_SENSOR_ARRAY_II",
        "Sensor Array II",
        "An advanced sensor array that improves a ship's ability to detect and track other objects in space with greater accuracy and range.",
        4,
        2,
        2,
    ],
    [
        "MOUNT_SENSOR_ARRAY_III",
        "Sensor Array III",
        "A powerful sensor array that can be used to scan for nearby objects and resources.",
        -1,
        -1,
        -1,
    ],
    [
        "MOUNT_MINING_LASER_I",
        "Mining Laser I",
        "A basic mining laser that can be used to extract valuable minerals from asteroids and other space objects.",
        3,
        0,
        1,
    ],
    [
        "MOUNT_MINING_LASER_II",
        "Mining Laser II",
        "An advanced mining laser that is more efficient and effective at extracting valuable minerals from asteroids and other space objects.",
        5,
        2,
        2,
    ],
    [
        "MOUNT_MINING_LASER_III",
        "Mining Laser III",
        "An advanced mining laser that is even more efficient and effective at extracting valuable minerals from asteroids and other space objects.",
        -1,
        -1,
        -1,
    ],
    [
        "MOUNT_LASER_CANNON_I",
        "Laser Cannon",
        "A basic laser weapon that fires concentrated beams of energy at high speed and accuracy.",
        -1,
        1,
        2,
    ],
    [
        "MOUNT_MISSILE_LAUNCHER_I",
        "Missile Launcher",
        "A basic missile launcher that fires guided missiles with a variety of warheads for different targets.",
        -1,
        2,
        1,
    ],
    [
        "MOUNT_TURRET_I",
        "Rotary Cannon",
        "A rotary cannon is a type of mounted turret that is designed to fire a high volume of rounds in rapid succession.",
        -1,
        1,
        2,
    ],
]

sql = """INSERT INTO public.ship_mounts(
mount_symbol, mount_name, mount_desc, strength, required_crew, required_power)
VALUES (%s, %s, %s, %s, %s, %s)

on conflict (mount_symbol) do nothing;"""
for mount in rows:
    with conn.cursor() as cur:
        result = cur.execute(sql, mount)
        print(f"{mount} - {cur.statusmessage}")

sql = """insert into manufacture_relationships (import_tradegoods, export_Tradegood) values (%s, %s) on conflict do nothing;"""
manufactables = {
    "CULTURAL_ARTIFACTS": ["LAB_INSTRUMENTS"],
    "PLASTICS": ["LIQUID_HYDROGEN"],
    "FERTILIZERS": ["LIQUID_NITROGEN"],
    "FUEL": ["HYDROCARBON"],
    "IRON": ["IRON_ORE"],
    "ALUMINUM": ["ALUMINUM_ORE"],
    "POLYNUCLEOTIDES": ["LIQUID_HYDROGEN", "LIQUID_NITROGEN"],
    "EXPLOSIVES": ["LIQUID_HYDROGEN", "LIQUID_NITROGEN"],
    "COPPER": ["COPPER_ORE"],
    "SILVER": ["SILVER_ORE"],
    "PLATINUM": ["PLATINUM_ORE"],
    "GOLD": ["GOLD_ORE"],
    "URANITE": ["URANITE_ORE"],
    "MERITIUM": ["MERITIUM_ORE"],
    "AMMUNITION": ["IRON", "LIQUID_NITROGEN"],
    "FAB_MATS": ["IRON", "QUARTZ_SAND"],
    "FOOD": ["FERTILIZERS"],
    "FABRICS": ["FERTILIZERS"],
    "ELECTRONICS": ["SILICON_CRYSTALS", "COPPER"],
    "MACHINERY": ["IRON"],
    "EQUIPMENT": ["ALUMINUM", "PLASTICS"],
    "JEWELRY": ["GOLD", "SILVER", "PRECIOUS_STONES", "DIAMONDS"],
    "MICROPROCESSORS": ["SILICON_CRYSTALS", "COPPER"],
    "FIREARMS": ["IRON", "AMMUNITION"],
    "ASSAULT_RIFLES": ["ALUMINUM", "AMMUNITION"],
    "CLOTHING": ["FABRICS"],
    "SHIP_PLATING": ["ALUMINUM", "MACHINERY"],
    "SHIP_PARTS": ["EQUIPMENT", "ELECTRONICS"],
    "MEDICINE": ["FABRICS", "POLYNUCLEOTIDES"],
    "DRUGS": ["AMMONIA_ICE", "POLYNUCLEOTIDES"],
    "MILITARY_EQUIPMENT": ["ALUMINUM", "ELECTRONICS"],
    "LAB_INSTRUMENTS": ["ELECTRONICS", "EQUIPMENT"],
    "BIOCOMPOSITES": ["FABRICS", "POLYNUCLEOTIDES"],
    "ADVANCED_CIRCUITRY": ["ELECTRONICS", "MICROPROCESSORS"],
    "REACTOR_SOLAR_I": ["IRON", "MACHINERY"],
    "REACTOR_FUSION_I": ["IRON", "MACHINERY"],
    "REACTOR_FISSION_I": ["IRON", "MACHINERY"],
    "REACTOR_CHEMICAL_I": ["IRON", "MACHINERY"],
    "REACTOR_ANTIMATTER_I": ["IRON", "MACHINERY"],
    "ENGINE_IMPULSE_DRIVE_I": ["IRON", "MACHINERY"],
    "ENGINE_ION_DRIVE_I": ["IRON", "MACHINERY"],
    "MODULE_CARGO_HOLD_I": ["IRON", "MACHINERY"],
    "MODULE_CARGO_HOLD_II": ["ALUMINUM", "MACHINERY"],
    "MODULE_MINERAL_PROCESSOR_I": ["IRON", "MACHINERY"],
    "MODULE_GAS_PROCESSOR_I": ["IRON", "MACHINERY"],
    "MODULE_CREW_QUARTERS_I": ["IRON", "MACHINERY", "FABRICS"],
    "MODULE_ENVOY_QUARTERS_I": ["IRON", "MACHINERY", "FABRICS"],
    "MODULE_PASSENGER_CABIN_I": ["IRON", "MACHINERY", "FABRICS"],
    "MODULE_SCIENCE_LAB_I": ["PLATINUM", "MACHINERY", "ADVANCED_CIRCUITRY"],
    "MODULE_ORE_REFINERY_I": ["PLATINUM", "MACHINERY"],
    "MODULE_FUEL_REFINERY_I": ["PLATINUM", "MACHINERY"],
    "MODULE_MICRO_REFINERY_I": ["PLATINUM", "MACHINERY"],
    "MOUNT_GAS_SIPHON_I": ["IRON", "MACHINERY"],
    "MOUNT_GAS_SIPHON_II": ["ALUMINUM", "MACHINERY"],
    "MOUNT_SURVEYOR_I": ["IRON", "MACHINERY", "ELECTRONICS"],
    "MOUNT_SURVEYOR_II": ["ALUMINUM", "MACHINERY", "ELECTRONICS"],
    "MOUNT_SENSOR_ARRAY_I": ["IRON", "MACHINERY", "ELECTRONICS"],
    "MOUNT_SENSOR_ARRAY_II": ["ALUMINUM", "MACHINERY", "ELECTRONICS"],
    "MOUNT_MINING_LASER_I": ["IRON", "MACHINERY", "DIAMONDS"],
    "MOUNT_MINING_LASER_II": ["ALUMINUM", "MACHINERY", "DIAMONDS"],
    "MOUNT_TURRET_I": ["IRON", "MACHINERY"],
    "MOUNT_LASER_CANNON_I": ["IRON", "MACHINERY", "DIAMONDS"],
    "MOUNT_MISSILE_LAUNCHER_I": ["IRON", "MACHINERY"],
    "QUANTUM_STABILIZERS": ["PLATINUM", "ADVANCED_CIRCUITRY", "URANITE"],
    "ANTIMATTER": ["LAB_INSTRUMENTS", "ADVANCED_CIRCUITRY"],
    "EXOTIC_MATTER": ["LAB_INSTRUMENTS", "ADVANCED_CIRCUITRY"],
    "RELIC_TECH": ["LAB_INSTRUMENTS", "EQUIPMENT"],
    "NOVEL_LIFEFORMS": ["LAB_INSTRUMENTS", "EQUIPMENT"],
    "BOTANICAL_SPECIMENS": ["LAB_INSTRUMENTS", "EQUIPMENT"],
    "AI_MAINFRAMES": ["ADVANCED_CIRCUITRY", "MICROPROCESSORS"],
    "QUANTUM_DRIVES": ["ADVANCED_CIRCUITRY", "URANITE"],
    "GRAVITON_EMITTERS": ["ADVANCED_CIRCUITRY", "MERITIUM"],
    "ROBOTIC_DRONES": ["ADVANCED_CIRCUITRY", "ALUMINUM"],
    "CYBER_IMPLANTS": ["ADVANCED_CIRCUITRY", "BIOCOMPOSITES"],
    "NANOBOTS": ["POLYNUCLEOTIDES", "LAB_INSTRUMENTS"],
    "GENE_THERAPEUTICS": ["POLYNUCLEOTIDES", "LAB_INSTRUMENTS"],
    "NEURAL_CHIPS": ["POLYNUCLEOTIDES", "ADVANCED_CIRCUITRY"],
    "MOOD_REGULATORS": ["POLYNUCLEOTIDES", "LAB_INSTRUMENTS"],
    "VIRAL_AGENTS": ["POLYNUCLEOTIDES", "LAB_INSTRUMENTS"],
    "MICRO_FUSION_GENERATORS": ["ADVANCED_CIRCUITRY", "PLATINUM", "DIAMONDS"],
    "SUPERGRAINS": ["FERTILIZERS", "POLYNUCLEOTIDES", "LAB_INSTRUMENTS"],
    "LASER_RIFLES": ["DIAMONDS", "PLATINUM", "ADVANCED_CIRCUITRY"],
    "HOLOGRAPHICS": ["GOLD", "SILVER", "ADVANCED_CIRCUITRY"],
    "ENGINE_ION_DRIVE_II": ["PLATINUM", "ADVANCED_CIRCUITRY"],
    "ENGINE_HYPER_DRIVE_I": ["PLATINUM", "ADVANCED_CIRCUITRY"],
    "MODULE_CARGO_HOLD_III": ["PLATINUM", "MACHINERY", "ADVANCED_CIRCUITRY"],
    "MODULE_JUMP_DRIVE_I": ["IRON", "ADVANCED_CIRCUITRY"],
    "MODULE_JUMP_DRIVE_II": ["PLATINUM", "ADVANCED_CIRCUITRY", "GOLD"],
    "MODULE_JUMP_DRIVE_III": ["PLATINUM", "ADVANCED_CIRCUITRY", "GOLD", "MERITIUM"],
    "MODULE_WARP_DRIVE_I": ["IRON", "ADVANCED_CIRCUITRY"],
    "MODULE_WARP_DRIVE_II": ["PLATINUM", "ADVANCED_CIRCUITRY", "URANITE"],
    "MODULE_WARP_DRIVE_III": ["PLATINUM", "ADVANCED_CIRCUITRY", "MERITIUM"],
    "MOUNT_GAS_SIPHON_III": ["PLATINUM", "MACHINERY", "ADVANCED_CIRCUITRY"],
    "MODULE_SHIELD_GENERATOR_I": ["IRON", "MACHINERY", "URANITE"],
    "MODULE_SHIELD_GENERATOR_II": ["ALUMINUM", "MACHINERY", "URANITE"],
    "MOUNT_SURVEYOR_III": ["PLATINUM", "MACHINERY", "ADVANCED_CIRCUITRY"],
    "MOUNT_SENSOR_ARRAY_III": [
        "PLATINUM",
        "MACHINERY",
        "ADVANCED_CIRCUITRY",
        "URANITE",
    ],
    "MOUNT_MINING_LASER_III": [
        "PLATINUM",
        "MACHINERY",
        "ADVANCED_CIRCUITRY",
        "URANITE",
    ],
    "SHIP_PROBE": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_MINING_DRONE": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_SIPHON_DRONE": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_LIGHT_HAULER": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_COMMAND_FRIGATE": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_INTERCEPTOR": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_EXPLORER": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_LIGHT_SHUTTLE": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_HEAVY_FREIGHTER": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_ORE_HOUND": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_REFINING_FREIGHTER": ["SHIP_PLATING", "SHIP_PARTS"],
    "SHIP_SURVEYOR": ["SHIP_PLATING", "SHIP_PARTS"],
}

for export_tradegood, import_tradegoods in manufactables.items():
    with conn.cursor() as cur:
        cur.execute(sql, (import_tradegoods, export_tradegood))
